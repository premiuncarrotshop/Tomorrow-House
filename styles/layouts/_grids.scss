/*
  * Mobile (<768px) -----------------------------------
  * fixture ---------------- sm
  * # of columns ----------- 4
  * gutter ----------------- 20px
  * margin ----------------- 5px
  * container-size --------- 100% - (5px * 2)

  * Tablet (>=768px) ----------------------------------
  * fixture ---------------- md
  * # of columns ----------- 12
  * gutter ----------------- 20px
  * margin ----------------- 30px
  * container -------------- 100% - (30px * 2)
  * max-container-size ----- 960px

  * Desktop (>=1200px) --------------------------------
  * fixture ---------------- lg
  * # of columns ----------- 12
  * unit ------------------- 75px
  * gutter ----------------- 20px
  * margin ----------------- auto --- unit이 정해지면 grid 영역을 쉽게 구할 수 있기 때문에 margin은 의미가 없다.
  * container -------------- 1140px
  * max-container-size ----- 1140px
*/

$gutter: 20px;

$sm-columns: 4;
$sm-margin: 5px;

$md-breakpoint: 768px;
$md-columns: 12;
$md-margin: 30px;
$md-max-container: 960px + $md-margin * 2;

$lg-breakpoint: 1200px;
$lg-columns: 12;
$lg-unit: 75px;
$lg-margin: auto;
$lg-max-container: ($lg-unit + $gutter) * $lg-columns;

.container {
  width: 100%;
  padding: 0 $sm-margin;
  margin: 0 auto;

  .row {
    display: flex;
    flex-wrap: wrap;
  }
  // ex) .col-sm-1, .col-md-4, .col-lg-2
  [class^='col-'] {
    padding: 0 $gutter / 2;
  }

  @for $i from 1 through $sm-columns {
    .col-sm-#{$i} {
      width: percentage($i / $sm-columns);
    }
  }

  @media screen and (min-width: $md-breakpoint) {
    max-width: $md-max-container;
    padding: 0 $md-margin;

    @for $i from 1 through $md-columns {
      .col-md-#{$i} {
        width: percentage($i / $md-columns);
      }
    }
  }

  @media screen and (min-width: $lg-breakpoint) {
    max-width: $lg-max-container;
    padding: 0;

    @for $i from 1 through $lg-columns {
      .col-lg-#{$i} {
        width: ($lg-unit + $gutter) * $i;
      }
    }
  }
}
